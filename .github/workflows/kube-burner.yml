name: kube-burner

on:
  push:
    branches: [ master ]
    paths-ignore:
    - "**.md"
    - "examples/**"
    - "hack/**"
  pull_request_target:
    branches: [ master ]
    paths-ignore:
    - "**.md"
    - "examples/**"
    - "hack/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.19
      uses: actions/setup-go@v2
      with:
        go-version: 1.19
      id: go

    - uses: actions/checkout@v3

    - name: Build
      run: make build

    - name: Build container images
      run: make images
      env:
        VERSION: snapshot

    - name: Install
      run: sudo make install
    
    - uses: actions/upload-artifact@v3
      with:
        name: kube-burner
        path: /usr/bin/kube-burner

  k8s-tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s-version:
        - v1.24.0
        - v1.23.0
        - v1.22.0
    steps:

    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
  
    - name: Download kube-burner binary
      uses: actions/download-artifact@v3
      with:
        name: kube-burner
        path: /tmp/

    - name: Execute tests
      working-directory: test
      run: |
        export PATH=${PATH}:/tmp/
        chmod +x /tmp/kube-burner
        ./run.sh
      env:
        KIND_VERSION: v0.16.0
        K8S_VERSION: ${{matrix.k8s-version}}

  ocp-wrapper-node-density:
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: ocp-e2e-ci
    steps:

    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Download kube-burner binary
      uses: actions/download-artifact@v3
      with:
        name: kube-burner
        path: /tmp/

    - name: Authenticate against OCP cluster
      run: oc login -u ${OPENSHIFT_USER} -p ${OPENSHIFT_PASSWORD} ${OPENSHIFT_SERVER} --insecure-skip-tls-verify=true
      env:
        OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
        OPENSHIFT_USER: ${{ secrets.OPENSHIFT_USER }}
        OPENSHIFT_PASSWORD: ${{ secrets.OPENSHIFT_PASSWORD }}

    - name: Execute tests
      working-directory: test
      run: |
        export PATH=${PATH}:/tmp/
        chmod +x /tmp/kube-burner
        ./run-ocp.sh

  lint:
    name: Run golangci-lint
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Run golangci-lint
      # You may pin to the exact commit or the version.
      # uses: golangci/golangci-lint-action@04eca2038305127fb1e6683425b6864cd5612f2d
      uses: golangci/golangci-lint-action@v3
      with:
        # version of golangci-lint to use in form of v1.2.3
        version: v1.32
        # if set to true and the action runs on a pull request - the action outputs only newly found issues
        only-new-issues: true
        # golangci-lint command line arguments
        #args: # optional, default is 
        # golangci-lint working directory, default is project root
        #working-directory: # optional
        # the token is used for fetching patch of a pull request to show only new issues
        #github-token: # default is ${{ github.token }}
