kind: Deployment
apiVersion: apps/v1
metadata:
  name: client-{{.Replica}}
spec:
  replicas: {{.podReplicas}}
  selector:
    matchLabels:
      app: client-{{.Replica}}
  template:
    metadata:
      labels:
        app: client-{{.Replica}}
        name: client
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
              - key: node-role.kubernetes.io/infra
                operator: DoesNotExist
              - key: node-role.kubernetes.io/workload
                operator: DoesNotExist
      containers:
      - name: client-app
        image: quay.io/cloud-bulldozer/curl:latest
        command: ["sleep", "inf"]
        resources:
          requests:
            memory: "10Mi"
            cpu: "10m"
        env:
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: false
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "curl --fail -sS ${SERVICE_ENDPOINT} -o /dev/null && curl --fail -sSk ${ROUTE_ENDPOINT} -o /dev/null"
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: secret-1
          mountPath: /secret1
        - name: secret-2
          mountPath: /secret2
        - name: secret-3
          mountPath: /secret3
        - name: secret-4
          mountPath: /secret4
        - name: configmap-1
          mountPath: /configmap1
        - name: configmap-2
          mountPath: /configmap2
        - name: configmap-3
          mountPath: /configmap3
        - name: configmap-4
          mountPath: /configmap4
        - name: podinfo
          mountPath: /etc/podlabels
        env:
        - name: ENVVAR1
          value: "{{randAlphaNum 250}}"
        - name: ENVVAR2
          value: "{{randAlphaNum 250}}"
        - name: ENVVAR3
          value: "{{randAlphaNum 250}}"
        - name: ENVVAR4
          value: "{{randAlphaNum 250}}"
        - name: ROUTE_ENDPOINT
          value: "https://cluster-density-{{.Replica}}-cluster-density-v2-{{.Iteration}}.{{ .ingressDomain }}/256.html"
        - name: SERVICE_ENDPOINT
          value: "http://cluster-density-{{randInt 1 6}}/256.html"
      volumes:
      - name: secret-1
        secret:
          secretName: {{.JobName}}-1
      - name: secret-2
        secret:
          secretName: {{.JobName}}-2
      - name: secret-3
        secret:
          secretName: {{.JobName}}-3
      - name: secret-4
        secret:
          secretName: {{.JobName}}-4
      - name: configmap-1
        configMap:
          name: {{.JobName}}-1
      - name: configmap-2
        configMap:
          name: {{.JobName}}-2
      - name: configmap-3
        configMap:
          name: {{.JobName}}-3
      - name: configmap-4
        configMap:
          name: {{.JobName}}-4
      - name: podinfo
        downwardAPI:
          items:
            - path: "labels"
              fieldRef:
                fieldPath: metadata.labels
      restartPolicy: Always
  strategy:
    type: RollingUpdate

