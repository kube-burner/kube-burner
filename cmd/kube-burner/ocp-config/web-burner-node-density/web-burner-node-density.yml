---
global:
  gc: {{.GC}}
  gcMetrics: {{.GC_METRICS}}
  indexerConfig:
    esServers: ["{{.ES_SERVER}}"]
    insecureSkipVerify: true
    defaultIndex: {{.ES_INDEX}}
    type: {{.INDEXING_TYPE}}
  measurements:
    - name: podLatency
      thresholds:
        - conditionType: Ready
          metric: P99
          threshold: {{.POD_READY_THRESHOLD}}

jobs:
{{ $normalLimit := mul .LIMITCOUNT .SCALE | int }}
{{ range $val := untilStep 1 (add $normalLimit 1|int) 1 }}
  - name: normal-service-job-{{ $val }}
    jobType: create
    jobIterations: 1
    qps: {{ $.QPS }}
    burst: {{ $.BURST }}
    namespacedIterations: false
    cleanup: false
    namespace: served-ns-{{ (sub $val 1|int) }}
    podWait: false
    waitWhenFinished: false
    verifyObjects: true
    errorOnVerify: false
    jobIterationDelay: 0s
    jobPause: 0s
    preLoadImages: false
    objects:
      - objectTemplate: node_density_pod_service_served.yml
        replicas: 1
{{ end }}

{{ range $index, $val := untilStep 1 (add $normalLimit 1|int) 1 }}
  - name: normal-job-{{ $val }}
    jobType: create
    jobIterations: 1
    qps:  {{ $.QPS }}
    burst: {{ $.BURST }}
    namespacedIterations: false
    cleanup: false
    namespace: served-ns-{{ (sub $val 1|int) }}
    podWait: true
    waitWhenFinished: true
    verifyObjects: true
    errorOnVerify: true
    jobIterationDelay: 0s
    jobPause: 0s
    preLoadImages: false
    objects:
      - objectTemplate: node_density_pod_served.yml
        replicas: 60
        inputVars:
          probe: "{{ $.PROBE }}"
        waitOptions:
          forCondition: "Ready"
{{ end }}

{{ $servedLimit := mul .LIMITCOUNT .SCALE | int }}
{{ range $index, $val := untilStep 1 (add $servedLimit 1|int) 1 }}
  - name: served-service-job-{{ $val }}
    jobType: create
    jobIterations: 1
    qps: {{ $.QPS }}
    burst: {{ $.BURST }}
    namespacedIterations: false
    cleanup: false
    namespace: served-ns-{{ (sub $val 1|int) }}
    podWait: false
    waitWhenFinished: false
    verifyObjects: true
    errorOnVerify: false
    jobIterationDelay: 0s
    jobPause: 0s
    preLoadImages: false
    objects:
      - objectTemplate: node_density_pod_service_served.yml
        replicas: 1
{{ end }}

{{ $lastLimit := add $servedLimit -1 | int }}
{{ range $index, $val := untilStep 1 (add $lastLimit 1|int) 1 }}
  - name: served-job-{{ $val }}
    jobType: create
    jobIterations: 1
    qps: {{ $.QPS }}
    burst: {{ $.BURST }}
    namespacedIterations: false
    cleanup: false
    namespace: served-ns-{{ (sub $val 1|int) }}
    podWait: true
    waitWhenFinished: true
    verifyObjects: true
    errorOnVerify: false
    jobIterationDelay: 0s
    jobPause: 0s
    preLoadImages: false
    objects:
      - objectTemplate: node_density_pod_served.yml
        replicas: 3
        waitOptions:
          forCondition: Ready
        inputVars:
          probe: "{{ $.PROBE }}"
{{ end }}


  - name: served-job-{{ $servedLimit }}
    jobType: create
    jobIterations: 1
    qps: {{ .QPS }}
    burst: {{ .BURST }}
    namespacedIterations: false
    cleanup: false
    namespace: served-ns-{{ (sub $servedLimit 1|int) }}
    podWait: true
    waitWhenFinished: true
    verifyObjects: true
    errorOnVerify: false
    jobIterationDelay: 0s
    jobPause: 0s
    preLoadImages: false
    objects:
      - objectTemplate: node_density_pod_served.yml
        replicas: 3
        waitOptions:
          forCondition: Ready
        inputVars:
          probe: "{{ $.PROBE }}"
